DECLARE
  --custom
  v_id  NUMBER;
  v_isDeleted  INTEGER;
  v_name  NVARCHAR2(255);
  v_code  NVARCHAR2(255);
  v_AutoGenerated INTEGER;
  v_description NCLOB;
  v_businessObjectId NUMBER;
  v_MessageParams NES_TABLE;
  
  --standard 
  v_errorcode NUMBER;
  v_errormessage NVARCHAR2(255);
  v_result number;
BEGIN
  --custom
  v_id := :ID;
  v_name := :NAME;
  v_code := :CODE;
  v_description := :DESCRIPTION;
  v_isDeleted := :ISDELETED;
  v_businessObjectId := :OBJECTID;
  v_AutoGenerated := :AUTOGENERATED;
  --standard 
  :affectedRows   := 0;
  v_errorcode     := 0;
  v_errormessage  := '';
  :SuccessResponse := EMPTY_CLOB();
 
  --set assumed success message
  IF v_id IS NOT NULL THEN
    :SuccessResponse := 'Updated form';
  ELSE
    :SuccessResponse := 'Created form';
  END IF;
  
  --set a desrciption for autogenerated form
  IF (DBMS_LOB.GETLENGTH(trim(v_description)) = 0 or DBMS_LOB.GETLENGTH(v_description) is null) THEN
	IF (NVL(v_AutoGenerated, 0) = 1) THEN
		v_description := 'Automatically created when Data Model was updated';
	END IF;
  END IF;
  
  BEGIN
    --add new record or update existing one 
    IF v_id IS NULL THEN
      INSERT INTO TBL_MDM_FORM (
        COL_NAME,
        COL_CODE,
        COL_DESCRIPTION,
        COL_ISDELETED,
        COL_MDM_FORMDOM_OBJECT,
        COL_AUTOGENERATED
      ) VALUES (
        v_name,
        v_code,
        v_description,
        v_isDeleted,
        v_businessObjectId,
        v_AutoGenerated
      ) RETURNING col_id INTO v_id;
    ELSE
      UPDATE TBL_MDM_FORM SET 
        COL_NAME = v_name,
        COL_CODE = v_code,
        COL_DESCRIPTION = v_description,
        COL_ISDELETED = v_isDeleted,
        COL_MDM_FORMDOM_OBJECT = v_businessObjectId,
        COL_AUTOGENERATED = v_AutoGenerated
      WHERE COL_ID = v_id;
    END IF;

    :affectedRows := SQL%ROWCOUNT;
    :recordId := v_id;
  EXCEPTION
    WHEN dup_val_on_index THEN
      :affectedRows    := 0;
      v_errorcode      := 101;
      v_errormessage   := 'There already exists a Form with the code {{MESS_CODE}}';
      v_MessageParams:= NES_TABLE();
      v_MessageParams.EXTEND(1);
      v_MessageParams(1) := Key_Value('MESS_CODE', v_code);
      v_result := LOC_i18n(
        MessageText => v_errormessage,
        MessageResult => v_errormessage,
        MessageParams => v_MessageParams,
        MessageParams2 => NULL
      );
      :SuccessResponse := '';
    WHEN OTHERS THEN
      :affectedRows    := 0;
      v_errorcode      := 102;
      v_errormessage   := substr(SQLERRM, 1, 200);
      :SuccessResponse := '';
  END;
  :errorCode    := v_errorcode;
  :errorMessage := v_errormessage;
END;