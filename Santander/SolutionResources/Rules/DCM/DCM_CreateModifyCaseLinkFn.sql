DECLARE
  --CUSTOM 
  V_ID          NUMBER;
  V_TYPELINK    NUMBER;
  V_PARENT      NUMBER;
  V_CHILD       NVARCHAR2(255);
  V_DESCRIPTION NCLOB;

  --STANDARD 
  V_ERRORCODE    NUMBER;
  V_ERRORMESSAGE NVARCHAR2(255);

BEGIN
  --CUSTOM 
  V_ID          := :LINKID;
  V_PARENT      := :LINK_PARENTCASEID;
  V_CHILD       := :LINK_CHILDCASEID;
  V_DESCRIPTION := :LINK_DESCRIPTION;
  V_TYPELINK    := :LINK_TYPE;

  --STANDARD 
  V_ERRORCODE    := 0;
  V_ERRORMESSAGE := '';

  BEGIN
    --ADD NEW RECORD OR UPDATE EXISTING ONE 
    IF V_ID IS NULL THEN
      FOR CHILD_IDS IN 
      (
        SELECT COLUMN_VALUE 
        FROM TABLE(ASF_SPLIT(V_CHILD))
      )
      LOOP
        INSERT INTO TBL_CASELINK
          (COL_CASELINKPARENTCASE, COL_CASELINKCHILDCASE, COL_CASELINKDICT_LINKTYPE, COL_CASELINKLINKDIRECTION, COL_DESCRIPTION)
        VALUES
          (V_PARENT, CHILD_IDS.COLUMN_VALUE, V_TYPELINK, 1, V_DESCRIPTION);
      END LOOP CHILD_IDS;
    ELSE
      UPDATE TBL_CASELINK
         SET COL_CASELINKDICT_LINKTYPE = V_TYPELINK,
             COL_DESCRIPTION           = V_DESCRIPTION
       WHERE COL_ID = V_ID;
    END IF;
  
  EXCEPTION
    WHEN OTHERS THEN
      V_ERRORCODE      := 102;
      V_ERRORMESSAGE   := SUBSTR(SQLERRM, 1, 200);
  END;

  :ERRORCODE    := V_ERRORCODE;
  :ERRORMESSAGE := V_ERRORMESSAGE;
END;